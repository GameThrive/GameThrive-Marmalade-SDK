# GameThrive Marmalade SDK API


List of Functions
----------
- [`GameThriveInitialize`](#GameThriveInitialize)
- [`GameThriveSendTag`](#sendTag)
- [`GameThriveGetTags`](#getTags)
- [`GameThriveDeleteTag`](#deleteTag)
- [`GameThriveSendPurchase`](#sendPurchase)
- [`GameThriveRegisterForPushNotifications`](#RegisterForPushNotifications)
- [`GameThriveGetIdsAvailable`](#idsAvailable)

List of Callback Results
-----
- [`GameThriveNotificationReceivedResult`](#HandleNotification)
- [`GameThriveIdsAvailableResult`](#IdsAvailableHandler)
- [`GameThriveTagsReceivedResult`](#TagsReceived)


## Methods
<a name="GameThriveInitialize" />
#### GameThriveInitialize
Call this function at the top of your int main() method to setup push notifications for your game.

- ##### Parameters
 - __`const char*` _appId___ - Your GameThrive app id from gamethrive.com
 - __`const char*` _googleProjectNumber___ -  Your Google project number that is only required for Android GCM pushes.
 - __`GameThriveNotificationReceivedCallbackFn` _callbackFn___ - Calls this function when a notification is opened or one is received when the user is in your game.
 - __`s3eBool` _autoRegister___ -  Set false to delay the iOS accept notification system prompt. You can then call `GameThriveRegisterForPushNotifications` at a better point in your game to prompt them.

 
- __Example__

	````cpp
	GameThriveInitialize("5eb5a37e-b458-11e3-ac11-000c2940e62c", "703322744261", (GameThriveNotificationReceivedCallbackFn)HandleReceivedNotification, true);
	````

<a name="sendTag" />
#### GameThriveSendTag
Tag a player based on a game event of your choosing so later you can create segments on [gamethrive.com](https://gamethrive.com) to target these players.

- ##### Parameters
 - __`const char*` _key___ - Key of your choosing to create or update.
   - _NOTE:_ Passing in a blank string deletes the key, you can also call GameThriveDeleteTag.
 - __`const char*` _value___ - Value to set on the key.

 
- __Example__

	````cpp
	GameThriveSendTag("key", "value");
	````

<a name="getTags" />
#### GameThriveGetTags
Retrieve a list of tags that have been set on the player from the GameThrive server.

- ##### Parameters
 - __`GameThriveTagsReceivedCallbackFn` _callbackFn___ - Function gets called once the tags are available.

 
- __Example__

	````cpp
	static void TagsReceived(GameThriveTagsReceivedResult* result) {
		char buffer[1024];
		sprintf(buffer, "TAGS RECIEVED CALLBACK TAGS: %s", result->m_Tags);
		s3eDebugOutputString(buffer);
	}

    GameThriveGetTags((GameThriveTagsReceivedCallbackFn)TagsReceived);
	````

<a name="deleteTag" />
#### GameThriveDeleteTag
Deletes a tag that was previously set on a player with `sendTag`.

- ##### Parameters
 - __`const char*` _key___ - Key to remove.
   
 
- __Example__

	````cpp
	GameThriveDeleteTag("key");
	````

<a name="sendPurchase" />
#### GameThriveSendPurchase
Call this method when a user completes an in-app purchase, and provide the amount spent in USD. This can later be used to target free vs paid users when sending a push notification.

- ##### Parameters
 - __`const double*`  _amount___ - Amount spent in USD.
   
- __Example__

	````cpp
	double purchaseAmount = 123.45d;
	GameThriveSendPurchase(&purchaseAmount);
	````

<a name="idsAvailable" />
#### GameThriveGetIdsAvailable
Lets you retrieve the GameThrive player id and push token. Your function is called after the device is successfully registered with GameThrive. If the device has already successfully registered, the callback function will be called immediately.

- ##### Parameters
 - __`GameThriveIdsAvailableCallbackFn`  _callbackFn___ -  Calls the function when the player id is available.

- __Example__

	````cpp
	static void IdsRecieved(GameThriveIdsAvailableResult* result) {
		char buffer[1024];
		char* nullChar = NULL;
		sprintf(buffer, "IDS RECIEVED CALLBACK PlayerID: %s, PushToken: %s, NULL:%s", result->m_PlayerID, result->m_PushToken, nullChar);
		s3eDebugOutputString(buffer);
	}
	
	GameThriveGetIdsAvailable((GameThriveIdsAvailableCallbackFn)IdsRecieved);
	````

<a name="RegisterForPushNotifications" />
#### GameThriveRegisterForPushNotifications
Call this when you would like to prompt an iOS user to accept push notifications with the default system prompt. Only use if you passed false to autoRegister when calling GameThriveInitialize.

- __Example__

	````cpp
	GameThriveRegisterForPushNotifications();
	````

## Callback Functions

<a name="HandleNotification" />
#### GameThriveNotificationReceivedResult
Result struct you can read from to get info on the notification the user just opened.

- __Values__
     - __`const char*` _m_Message___ - The message text the user seen in the notification.
     - __`const char*` _m_AdditionalData___ - JSON string that was set on the notification.
     - __`s3eBool` _m_isActive___ - True if your app was currently being used when a notification came in.
   
 
- __Example__

	````cpp
	static void HandleReceivedNotification(GameThriveNotificationReceivedResult* result, void* userData) {
		char buffer[1024];
		sprintf(buffer, "NOTIFICATION RECIEVED CALLBACK MESSAGE: %s", result->m_Message);
		s3eDebugOutputString(buffer);
		
		if (result->m_AdditionalData != NULL) {
			char buffer2[1024];
			sprintf(buffer2, "NOTIFICATION RECIEVED CALLBACK ADDITIONALDATA: %s", result->m_AdditionalData);
			s3eDebugOutputString(buffer2);
		}
	}
	````

<a name="IdsAvailable" />
#### GameThriveIdsAvailableResult
Result struct you can read to get the GameThrive playerId and Google registration Id or an iOS push token.

   - __Parameters__
     - __`const char*` _m_PlayerID___ - GameThrive playerId is a UUID formatted string.(_unique per device per app_)
     - __`const char*` _m_PushToken___ - Either a Google registration Id or an iOS push token identifier(_unique per device per app_).
      - _NOTE:_ Might be NULL if push notifications are not accepted on iOS, Google Play services are not installed, or from a connection issue.
 
- __Example__

	````cpp
	static void IdsRecieved(GameThriveIdsAvailableResult* result) {
		char buffer[1024];
		sprintf(buffer, "IDS RECIEVED CALLBACK PlayerID: %s, PushToken: %s", result->m_PlayerID, result->m_PushToken);
		s3eDebugOutputString(buffer);
	}
	````

<a name="TagsReceived" />
#### GameThriveTagsReceivedResult
Result struct you can read to get the all the tags set on a player from gamethrive.com.

   - __Parameters__
     - __`const char*` _m_Tags___ - JSON string retrieved from the GameThrive server.
   
 
- __Example__

	````cpp
	static void TagsReceived(GameThriveTagsReceivedResult* result) {
		char buffer[1024];
		sprintf(buffer, "TAGS RECIEVED CALLBACK TAGS: %s", result->m_Tags);
		s3eDebugOutputString(buffer);
	}
	````
